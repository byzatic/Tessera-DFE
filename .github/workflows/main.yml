name: Build and Publish Docker Image

on:
  push:
    branches: ["**"]
    #paths:
    #  - 'src/**'
    #  - 'Dockerfile'
  pull_request:
  release:
    types: [published]
  workflow_dispatch:

env:
  IMAGE_NAME: tessera-data-flow-engine

jobs:

  debug:
    if: |
      (github.actor == 'byzatic' || github.actor == 'svyatvlasso') &&
      (github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository)
    runs-on: ubuntu-latest

    steps:
      - run: echo "Actor is ${{ github.actor }}"


  test:
    runs-on: ubuntu-latest
    if: |
      (github.actor == 'byzatic' || github.actor == 'svyatvlasso') &&
      (github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository)

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      - name: Build and test with Maven
        run: mvn clean verify --no-transfer-progress


#  build-and-push-buildx:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Login to DockerHub
#        uses: docker/login-action@v3
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#
#      - name: Extract Docker metadata
#        id: meta
#        uses: docker/metadata-action@v5
#        with:
#          images: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
#
#      - name: Get short SHA
#        id: vars
#        run: echo "short_sha=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
#
#      - name: Build and push Docker image
#        uses: docker/build-push-action@v5
#        with:
#          context: .
#          push: true
#          tags: |
#            ${{ steps.meta.outputs.tags }}
#            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
#            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:sha-${{ steps.vars.outputs.short_sha }}
#          labels: ${{ steps.meta.outputs.labels }}


#  # via host installed buildah
#  build-and-push-buildah:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout repo
#        uses: actions/checkout@v4
#
#      - name: Install Buildah
#        run: |
#          sudo apt-get update
#          sudo apt-get install -y buildah
#
#      - name: Install additional
#        run: |
#          sudo apt-get install -y tree
#
#
#      - name: debug tree
#        run: |
#          pwd && echo \n && tree
#
#      - name: Log in to DockerHub
#        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | buildah login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin docker.io
#
#      - name: Build image with Buildah
#        run: |
#          buildah bud \
#            --tag docker.io/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
#            --file Dockerfile \
#            .
#
#      - name: Push image to DockerHub
#        run: |
#          buildah push docker.io/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}


  build-and-push-buildah:
    runs-on: ubuntu-latest
    if: |
      (github.actor == 'byzatic' || github.actor == 'svyatvlasso') &&
      (github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository)

    container:
      image: quay.io/buildah/stable:latest
      options: --privileged

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Get short SHA and branch name
        id: vars
        run: |
          echo "short_sha=${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"

          if [[ "${GITHUB_EVENT_NAME}" == "pull_request" ]]; then
            echo "branch_name=${GITHUB_HEAD_REF//\//-}" >> "$GITHUB_OUTPUT"
          else
            ref="${GITHUB_REF##refs/heads/}"
            echo "branch_name=${ref//\//-}" >> "$GITHUB_OUTPUT"
          fi

      - name: Login to DockerHub
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | buildah login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin docker.io

      - name: Build image with required tags
        run: |
          buildah bud \
            --tag docker.io/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:sha-${{ steps.vars.outputs.short_sha }} \
            --tag docker.io/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.branch_name }} \
            $( [[ "${{ steps.vars.outputs.branch_name }}" == "main" ]] && echo "--tag docker.io/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest" ) \
            $( [[ "${{ steps.vars.outputs.branch_name }}" == "main" ]] && echo "--tag docker.io/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:main" ) \
            --file Dockerfile .

      - name: "Push image: sha and branch"
        run: |
          buildah push docker.io/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:sha-${{ steps.vars.outputs.short_sha }}
          buildah push docker.io/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.branch_name }}

      - name: "Push image: latest and main"
        if: steps.vars.outputs.branch_name == 'main'
        run: |
          buildah push docker.io/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
          buildah push docker.io/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:main
